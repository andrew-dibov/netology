### Задача 2

- **Физические серверы** : производительность, отсутствие дополнительных абстракций над аппаратным уровнем, низкая скорость масштабирования, высокая стоимость обслуживания, сложность в реализации отказоустойчивости, безопасность данных, независимость от вендора
- **Виртуальные машины** : опасность шумных соседей, гибкость управления ресурсами, простота репликации, простота бэкапов и снимков, полноценная изоляция
- **Managed Service** : операционная эффективность, отказоустойчивость, высокая доступность, ограничение контроля и кастомизации, вендор-лок, повышенная стоимость
- **Контейнеризация** : частичная изоляция, сложность управления stateful-приложениями, эффективность использования ресурсов, идемпотентность и переносимость, оркестрация и автоматизация

#### База данных

Использую виртуальные машины. Разверну кластер из одного мастера и трех реплик для обеспечения отказоустойчивости. Реплики размещу в разных зонах доступности провайдера. Настрою репликацию данных. Настрою переключение мастера на случай его отказа. Смогу гибко управлять ресурсами и быстро масштабировать кластер. Это дешевле, чем сборка собственного центра обработки данных и его обслуживание (если не критичны требования безопасности к условиям хранения данных).

Можно рассмотреть Managed Service for MySQL, если учесть потенциальный вендор-лок, более высокую стоимость и ограничения в тонкой настройке базы данных.

#### Веб-приложение

Использую виртуальные машины для реализации баз данных, но сделаю выбор в пользу K8s-кластера для развертывания самого веб-приложения. Приложение будет размещать поды в нескольких зонах доступности, что реализует отказоустойчивость. Ресурсы будут использоваться более эффективно ввиду плотности размещения подов в рамках одного из хостов. Я получу возможность канареечного развертывания, что позволить тестировать новый функционал на проценте пользователей. Буду применять автоматизацию для масштабирования и упралвения подами. Веб-приложения не являются stateful-приложениями.

Можно рассмотреть Managed Service for Kubernetes, если учесть потенциальный вендор-лок, более высокую стоимость и ограничения в тонкой настройке базы данных.

#### Windows-система бухгалтерии

Использую виртуальные машины. Создам эталонный шаблон с предустановленной и настроенной операционной системой, 1С и т.д. Буду разворачивать новые рабочие места из него. Для автоматической конфигурации применю cloud-init. Реализую возможность отката к ранним снимкам системы, чтобы вернуться в рабочее состояние в случае сбоя. Буду делать автоматическое резервное копированние операционной системы, данных и настроек пользователя. Гипервизор сможет автоматических перезапускать виртуальную машину на другом узле в случае сбоя. Настрою Remote Desktop для пользователей и SSH для админов.

#### Система высокопроизводительных расчетов GPU

Вероятно, лучшее решение для такой системы - физический сервера в специализированном центре обработки дынных.

### Задача 3

#### Сценарий 1

В идеале использовать VMware vSphere как стандарт корпоративной виртуализации. Обладает встроенными инструментами балансировки нагрузки, репликации и бэкапов. Хорошая поддержка windows-систем. Высокая стоимость по отношению к другим системам.

Если бюджет ограничен, то либо Hyper-V, либо Proxmox. Оба варианта подходят по требованиям отказоустойивости, бэкапирования и репликации.

#### Сценарий 2

Выбираю кластер из Proxmox на трех физических машинах. Вероятно стоит приобрести подписку на коммерческую поддержку.

#### Сценарий 3

Склоняюсь к Proxmox, но вероятно подойдет Hyper-V Server.

#### Сценарий 4

Вероятно, проще развернуть тестовое окружение с использованием K8s контейнеров с определенными окружениями.

### Задача 4

Я бы стремился к сохранению гомогенной среды, но использовал бы гетерогенную по необходимости. Вероятно, такие среды существуют по необходимости в процессе миграции ресурсов компании между вендорами и т.д.

- **Высокая сложность управления** : операционные накладные расходы
- **Проблемы безопасности** : увеличение количества точек отказа 
- **Высокая стоимость** : лицензии, персонал и т.д.
